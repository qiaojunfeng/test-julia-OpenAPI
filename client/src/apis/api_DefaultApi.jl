# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct DefaultApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `DefaultApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ DefaultApi }) = "http://localhost"

const _returntypes_upload_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_upload_post(_api::DefaultApi, body::Vector{UInt8}; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_upload_post_DefaultApi, "/upload", [], body)
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/octet-stream", ] : [_mediaType])
    return _ctx
end

@doc raw"""Upload a file

Params:
- body::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function upload_post(_api::DefaultApi, body::String; _mediaType=nothing)
    _ctx = _oacinternal_upload_post(_api, body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function upload_post(_api::DefaultApi, response_stream::Channel, body::String; _mediaType=nothing)
    _ctx = _oacinternal_upload_post(_api, body; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export upload_post
